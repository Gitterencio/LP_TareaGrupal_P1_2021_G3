<Programa> :: = <Cebolla>
<Cebolla>::=<Nucleo>|<Cebolla> <Capas>

/ * nota: he incluido espacios en blanco dentro de las comillas en las palabras clabe, tomar en cuenta eso * /
<Nucleo> :: = "CEBOLLA" "núcleo" <VariableNucleo> "{" <CodigoNucleo> "}"
<Capas> :: = <Capa>|<Capas> <Capa>
<Capa> :: = "CEBOLLA" "capa" <VariableCapa> "{" <CodigoCapa> "}"

<VariableCapa> :: = <Variable>
<VariableNucleo> :: = <Variable>

<Fin> :: = ";" 

<CodigoNucleo> :: = <CodigoExtra>|<FuncionIni>|<ListaFuncionesExt> 
<FuncionIni> :: = "func" <Variable> "(principal)" ":" <ListaInstrucciones> <Fin>

<CodigoCapa> :: = <CodigoExtra> <ListaFuncionesExt>
<CodigoExtra> :: = <ListaImportacion>|<ListaVariablesGlobales>|<ListaImportacion> <ListaVariablesGlobales> | "ξ"
<ListaImportacion> :: = <Importacion>|<ListaImportacion> <Importacion>
<Importacion> :: = "importar" "capa" "." <VariableCapa> <Fin>
<ListaVariablesGlobales> :: = <DeclaracionVariable>|<ListaVariablesGlobales> <DeclaracionVariable>


<ListaFuncionesExt> :: = <FuncionExt>|<ListaFunciones> <FuncionExt> | <Comentarios> "ξ"
<FuncionExt> :: = <FuncionSinRetorno> | <FuncionConRetorno> 
<FuncionSinRetorno> :: = "func" <Variable> "(" <ListaParmetros> ")" ":" <ListaInstrucciones> <Fin>
<FuncionConRetorno> :: = "func" <Variable> "(" <ListaParmetros> ")" ":" <ListaInstrucciones><Retorno> <Fin>
<ListaParmetros> :: = <ListaVariables> | <ListaExpreciones> | "ξ"
<ListaExpreciones> :: = <Exprecion> | <ListaExpreciones> "," <Exprecion>
<ListaInstrucciones> :: = <Instruccion>|<ListaInstrucciones> <Instruccion> | "ξ"

<Instruccion> :: = <DeclaracionVariable> | <Asignacion> | <Retorno> | <UsarFuncionSR> | <CicloWhile> | <DecisionIf> | <ExprecionAritmetica> | <Imprimir> | <CicloFor> | <CicloWhile> | <CicloDoWhile> | <Cambiar>

<Expresión> :: = <ExpresionAritmetica> | "(" <Exprecion> ")" | <Variable> | <UsarFuncionCR> | <Cadena> | <VariableObj> "." <Variable> | <VariableObj> "." <UsarFuncionCR> | <Grafo>
<Numero> :: = <Real> | <Entero> | <EnteroSin> 
<Real> :: = <Entero> "." <EnteroSin>
<Entero> :: = <Signo><Digito>|<Entero> <Digito>
<Signo> :: = "+" | "-" | "ξ"
<OperadorAritmetico> :: = "+" | "-" | "*" | "/"
<Operadorbinario> ::= + | - | * | / | = | <> | < | > | <= | >=
<Tipoarray> ::= <array>
<LiteralTipoBoolean> ::= "true" | "false"


<ExpresionAritmetica> :: = <Numero>|<Expresion>|<ExpresionAritmetica><OperadorAritmetico> <ExpresionAritmetica>

<ListaVariables> :: = <Variable> | <ListaVariables> "," <Variable>
<Variable> :: = <Cadena>
<Cadena> :: = <Letra>|<Cadena><Letra>|<Cadena> <EnteroSin>
<Comentarios>::=<Cadena>
<Letra> :: = <LetraMay> | <LetraMin>
<LetraMayo> :: = A | B | C | D | E | F | G | H | I | J | K | L | M | N | Ñ | O | P | Q | R | S | T | U | V | W | X | Y | Z
<LetraMin> :: = a | b | c | d | e | f | g | h | i | j | k | l | m | n | ñ | o | p | q | r | s | t | u | v | w | x | y | z
<EnteroSin> :: = <Digito>|<EnteroSin> <Digito>
<Dígito> :: = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 0

<UsarFuncionCR> :: = <UsarFuncion>
<UsarFuncionSR> :: = <UsarFuncion> <Fin> | <VariableObj> "." <UsarFuncion> <Fin>
<UsarFuncion> :: = <Variable> "(" <ListaParmetros> ")"

<DeclaracionVariable> :: = "var" <ListaVariables> <Fin> | "var" <Asignacion> |

<Asignacion> :: = <Variable> "=" <Expresion> <Fin> | <Variable> "=" <VariableObj>.<Variable> <Fin> | <VariableObj>. <Variable> "=" <Expresion> < Fin> | <VariableObj> "=" "nuevo" <VariableCapa> <Fin>
<Grafo> :: = "json"

<VariableObj> :: = <Variable>

<Retorno> :: = "volver" <Expresión> <Fin>

<CicloWhile> :: = "while" "(" <Condicion> ")" ":" <ListaInstrucciones> <Fin>
<Condicion> :: = <Booleano>
<Booleano> 1 | 0 | "verdadero" | "falso" | <Expresión> <OperadorBool> <Exprecion> | <Cadena> <OperadorBool> <Cadena>
<OperadorBool> :: = "==" | "<" | ">" | "<=" | "> =" | "! ="

<DecisionIf> :: = <DecisionSimple> <Fin> | DecisionCompuesta <Fin>
<DecisionSimple> :: = "if" <Condicion> ":" <ListaInstrucciones> | DecisionSimple ":" <DecisionDefault>
<DecisionDefault> :: = "else" ":" <ListaInstrucciones>
<DecisionCompuesta> :: = <DecisionSimple> ":" <ListaCondicionesExtra> | <DecisionCompuesta> ":" <DecisionDefault>
<ListaCondicionesExtra> :: = <CondicionExtra> | <ListaCondicionesExtra> ":" <CondicionExtra>
<CondicionExtra> :: = "elif" <Condicion> ":" <ListaInstrucciones> 

<Llamadafuncion> ::= <UsarFuncion>|<UsarFuncionCR>|<UsarFuncionSR>

<CicloFor> :: = "for" (<Expresion> ";" <Condicion> ";" <Expresion>) ":" <ListaInstrucciones> <Fin>
<CicloWhile> :: = "while" <condicion> ":" <ListaInstrucciones> <Fin>
<CicloDoWhile> :: = "do" ":" <ListaInstrucciones> ":" "while" <Condicion> <Fin>
<Switch> :: = "switch" <variable> <ListaCasos> <Fin> | "switch" <variable> <ListaCasos> <Default> <Fin>
<Predeterminado> :: = <ListaInstrucciones>
<ListaCasos> :: = <Casos>|<ListaCasos> <Casos>
<Casos> :: = "case" <EnteroSin> ":" <ListaInstrucciones> "break" <Fin> | "case" <letra> ":" <ListaInstrucciones> "break" <Fin>

<Imprimir> :: = "imprimir" "." "(" Expresion ")" <Fin>





/ * ejemplo de codigo
las comillas en 'nucleo' no son necesarios solo es para diferenciar
* /

Núcleo de CEBOLLA {

    import layer.'exten '/ * comillas no necesarias solo son para resaltar * /
    
    var h1, h2;
    var h3 = new 'exten';

    fun f1 (principal): 


        f2 (5,2 + 2);

        si (h3 <(h2 + h1)):

             h3.'fx1 () '= f3 (h3, h1, h2);

        : si no (h2 <h3):

            h3.'ex1 '= h1;

        :demás:

            h3.'fx2 ('h2') ';
        ;


    ;

    divertido f2 (v1, v2):

        h1 = v1;
        h2 = v2;
    ;

    divertido f3 (v1, v2, v3):
    
        devuelve v1 + v2 + v3;
    
    ;

    imprimir. (f3);

}

CEBOLLA capa 'exten' {

    var ex1 = 2;

    fx1 ():
        return ex1;
    ;

    fx2 (vw):
    
        ex1 = vw;
    ;

}



/ * ///////////////////////////////////////// * /

